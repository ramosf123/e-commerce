{"version":3,"sources":["components/preview-collection/preview-collection.styles.jsx","components/preview-collection/preview-collection.component.jsx","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPreviewContainer","styled","div","TitleContainer","h1","PreviewContainer","withRouter","title","items","history","match","routeName","onClick","push","path","toUpperCase","filter","item","idx","map","key","id","CollectionsOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","collectionProps","isLoading","selectIsCollectionFetching","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","selectCollection","collectionUrlParam","isFetching","selectIsCollectionsLoaded","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","inverted"],"mappings":"26BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAU1BC,EAAiBF,IAAOG,GAAV,KASdC,EAAmBJ,IAAOC,IAAV,KCIdI,eAfW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,UAAjC,OACxB,kBAACX,EAAD,KACE,kBAACG,EAAD,CAAgBS,QAAS,kBAAMH,EAAQI,KAAR,UAAgBH,EAAMI,KAAtB,YAA8BH,MAC1DJ,EAAMQ,eAET,kBAACV,EAAD,KACGG,EACEQ,QAAO,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACF,GAAD,OACH,kBAAC,IAAD,CAAgBG,IAAKH,EAAKI,GAAIJ,KAAMA,Y,oHCjBvC,IAAMK,EAA+BrB,IAAOC,IAAV,KCenCqB,EAAkBC,YAAyB,CAC/CC,YAAaC,MAGAC,cAAQJ,EAARI,EAZoB,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACjC,kBAACH,EAAD,KACGG,EAAYN,KAAI,gBAAGE,EAAH,EAAGA,GAAOO,EAAV,6BACf,kBAAC,EAAD,eAAmBR,IAAKC,GAAQO,WCJhCL,EAAkBC,YAAyB,CAC/CK,UAAWC,MAGPR,EAA+BS,YACnCJ,YAAQJ,GACRS,IAFmCD,CAGnCE,GAEaX,a,gCCjBf,oJAGMY,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAEvBC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKX,eAGJC,EAA8BY,YACzC,CAACD,IACD,SAACZ,GAAD,OACEA,EAAcc,OAAOC,KAAKf,GAAaN,KAAI,SAACC,GAAD,OAASK,EAAYL,MAAQ,MAG/DqB,EAAmB,SAACC,GAAD,OAC9BJ,YAAe,CAACD,IAAoB,SAACZ,GAAD,OAClCA,EAAcA,EAAYiB,GAAsB,SAGvCZ,EAA6BQ,YACxC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKO,cAGJC,EAA4BN,YACvC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKX,gB,oECpBJO,IAJK,SAACa,GAAD,OAAsB,YAAmC,IAAhChB,EAA+B,EAA/BA,UAAciB,EAAiB,6BAC1E,OAAOjB,EAAY,kBAAC,IAAD,MAAc,kBAACgB,EAAqBC,M,mkDCFlD,IAAMC,EAA0B9C,IAAOC,IAAV,KAiCvB8C,EAAY/C,YAAOgD,IAAPhD,CAAH,KAcTiD,EAAkBjD,IAAOC,IAAV,KAMN,gBAAGiD,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BnD,IAAOC,IAAV,KAQzBmD,EAAgBpD,IAAOqD,KAAV,KAKbC,EAAiBtD,IAAOqD,KAAV,KCnCZ3B,gBAAQ,MAJI,SAAC6B,GAAD,MAAe,CACxCC,QAAS,SAACxC,GAAD,OAAUuC,EAASC,YAAQxC,QAGvBU,EArBQ,SAAC,GAAuB,IAArBV,EAAoB,EAApBA,KAAMwC,EAAc,EAAdA,QACtBC,EAA0BzC,EAA1ByC,KAAMC,EAAoB1C,EAApB0C,MAAOR,EAAalC,EAAbkC,SAErB,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,SAAkBI,IAEpB,kBAACX,EAAD,CAAWpC,QAAS,kBAAM6C,EAAQxC,IAAO4C,UAAQ,GAAjD","file":"static/js/4.852873fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 800px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleContainer = styled.h1`\n  font-size: 28px;\n  margin-bottom: 25px;\n  cursor: pointer;\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 800px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n  @media screen and (max-width: 350px) {\n    display: block;\n    width: 80%;\n  }\n`;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport CollectionItem from \"../collection-item/collection-item.component\";\nimport {\n  CollectionPreviewContainer,\n  TitleContainer,\n  PreviewContainer,\n} from \"./preview-collection.styles\";\n\nconst CollectionPreview = ({ title, items, history, match, routeName }) => (\n  <CollectionPreviewContainer>\n    <TitleContainer onClick={() => history.push(`${match.path}/${routeName}`)}>\n      {title.toUpperCase()}\n    </TitleContainer>\n    <PreviewContainer>\n      {items\n        .filter((item, idx) => idx < 4)\n        .map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </PreviewContainer>\n  </CollectionPreviewContainer>\n);\n\nexport default withRouter(CollectionPreview);\n","import styled from \"styled-components\";\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectCollectionsForPreview } from \"../../redux/shop/shop.selectors\";\nimport CollectionPreview from \"../preview-collection/preview-collection.component\";\n\nimport { CollectionsOverviewContainer } from \"./collections-overview.styles\";\n\nexport const CollectionsOverview = ({ collections }) => (\n  <CollectionsOverviewContainer>\n    {collections.map(({ id, ...collectionProps }) => (\n      <CollectionPreview key={id} {...collectionProps} />\n    ))}\n  </CollectionsOverviewContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsForPreview,\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { compose } from \"redux\";\n\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching,\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n","import { createSelector } from \"reselect\";\n// import memoize from \"lodash.memoize\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  (shop) => !!shop.collections\n);\n","import React from \"react\";\n\nimport Spinner from \"../spinner/spinner.component\";\n\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from \"styled-components\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        opacity: unset;\n      }\n    }\n  }\n  @media screen and (max-width: 350px) {\n    width: 100%;\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 10%;\n  display: flex;\n  justify-content: space-around;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  @media screen and (max-width: 800px) {\n    width: 20%;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { addItem } from \"../../redux/cart/cart.actions\";\n\nimport {\n  CollectionItemContainer,\n  AddButton,\n  BackgroundImage,\n  CollectionFooterContainer,\n  NameContainer,\n  PriceContainer,\n} from \"./collection-item.styles\";\n\n// import \"./collection-item.styles.scss\";\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>${price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add To Cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}