{"version":3,"sources":["pages/collection/collection.styles.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.jsx"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionsLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","collectionUrlParam","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"mnBAEO,IAAMA,EAA0BC,IAAOC,IAAV,KAKvBC,EAAkBF,IAAOG,GAAV,KAKfC,EAA2BJ,IAAOC,IAAV,KCoBtBI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAnBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WAChBK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MAEf,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,KAAkBW,GAClB,kBAACT,EAAD,KACGU,EAAMC,KAAI,SAACC,GAAD,OACT,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,YCbxCG,EAAkBC,YAAyB,CAC/CC,UAAW,SAACf,GAAD,OAAYgB,YAA0BhB,MAG7CP,EAA0BwB,YAC9BlB,YAAQc,GACRK,IAF8BD,CAG9BE,GAEa1B,a,gCCjBf,oJAGM2B,EAAa,SAACpB,GAAD,OAAWA,EAAMqB,MAEvBC,EAAoBC,YAC/B,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OACEA,EAAcE,OAAOC,KAAKH,GAAaf,KAAI,SAACE,GAAD,OAASa,EAAYb,MAAQ,MAG/DR,EAAmB,SAACyB,GAAD,OAC9BL,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYI,GAAsB,SAGvCC,EAA6BN,YACxC,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKS,cAGJd,EAA4BO,YACvC,CAACH,IACD,SAACC,GAAD,QAAYA,EAAKG,gB,oECpBJN,IAJK,SAACa,GAAD,OAAsB,YAAmC,IAAhChB,EAA+B,EAA/BA,UAAciB,EAAiB,6BAC1E,OAAOjB,EAAY,kBAAC,IAAD,MAAc,kBAACgB,EAAqBC,M,mkDCFlD,IAAMC,EAA0BvC,IAAOC,IAAV,KAiCvBuC,EAAYxC,YAAOyC,IAAPzC,CAAH,KAcT0C,EAAkB1C,IAAOC,IAAV,KAMN,gBAAG0C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B5C,IAAOC,IAAV,KAQzB4C,EAAgB7C,IAAO8C,KAAV,KAKbC,EAAiB/C,IAAO8C,KAAV,KCnCZzC,gBAAQ,MAJI,SAAC2C,GAAD,MAAe,CACxCC,QAAS,SAACjC,GAAD,OAAUgC,EAASC,YAAQjC,QAGvBX,EArBQ,SAAC,GAAuB,IAArBW,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QACtBC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOR,EAAa3B,EAAb2B,SAErB,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,SAAkBI,IAEpB,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQjC,IAAOsC,UAAQ,GAAjD","file":"static/js/5.e08d35d2.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n  & > div {\n    margin-bottom: 30px;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\n\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer,\n} from \"./collection.styles\";\n\nconst CollectionPage = ({ collection }) => {\n  const { title, items } = collection;\n\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionPage from \"../collection/collection.component\";\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: (state) => !selectIsCollectionsLoaded(state),\n});\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;\n","import { createSelector } from \"reselect\";\n// import memoize from \"lodash.memoize\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  (shop) => !!shop.collections\n);\n","import React from \"react\";\n\nimport Spinner from \"../spinner/spinner.component\";\n\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import styled from \"styled-components\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        opacity: unset;\n      }\n    }\n  }\n  @media screen and (max-width: 350px) {\n    width: 100%;\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 10%;\n  display: flex;\n  justify-content: space-around;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  @media screen and (max-width: 800px) {\n    width: 20%;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { addItem } from \"../../redux/cart/cart.actions\";\n\nimport {\n  CollectionItemContainer,\n  AddButton,\n  BackgroundImage,\n  CollectionFooterContainer,\n  NameContainer,\n  PriceContainer,\n} from \"./collection-item.styles\";\n\n// import \"./collection-item.styles.scss\";\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>${price}</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add To Cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}