{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import{createStructuredSelector}from\"reselect\";import CheckoutItem from\"../../components/checkout-item/checkout-item.component\";import StripeCheckoutButton from\"../../components/stripe-button/stripe-button.component\";import{selectCartItems,selectCartTotal}from\"../../redux/cart/cart.selectors\";import{CheckoutHeaderContainer,CheckoutPageContainer,HeaderBlockContainer,TotalContainer}from\"./checkout.styles\";var CheckoutPage=function CheckoutPage(_ref){var cartItems=_ref.cartItems,total=_ref.total;return/*#__PURE__*/React.createElement(CheckoutPageContainer,null,/*#__PURE__*/React.createElement(CheckoutHeaderContainer,null,/*#__PURE__*/React.createElement(HeaderBlockContainer,null,/*#__PURE__*/React.createElement(\"span\",null,\"Product\")),/*#__PURE__*/React.createElement(HeaderBlockContainer,null,/*#__PURE__*/React.createElement(\"span\",null,\"Description\")),/*#__PURE__*/React.createElement(HeaderBlockContainer,null,/*#__PURE__*/React.createElement(\"span\",null,\"Quantity\")),/*#__PURE__*/React.createElement(HeaderBlockContainer,null,/*#__PURE__*/React.createElement(\"span\",null,\"Price\")),/*#__PURE__*/React.createElement(HeaderBlockContainer,null,/*#__PURE__*/React.createElement(\"span\",null,\"Remove\"))),cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CheckoutItem,{key:cartItem.id,cartItem:cartItem});}),/*#__PURE__*/React.createElement(TotalContainer,null,\"TOTAL: $\",total),/*#__PURE__*/React.createElement(StripeCheckoutButton,{price:total}));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems,total:selectCartTotal});export default connect(mapStateToProps)(CheckoutPage);","map":{"version":3,"sources":["/Users/framos/Projects/e-commerce/client/src/pages/checkout/checkout.component.jsx"],"names":["React","connect","createStructuredSelector","CheckoutItem","StripeCheckoutButton","selectCartItems","selectCartTotal","CheckoutHeaderContainer","CheckoutPageContainer","HeaderBlockContainer","TotalContainer","CheckoutPage","cartItems","total","map","cartItem","id","mapStateToProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,wBAAT,KAAyC,UAAzC,CAEA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wDAAjC,CAEA,OACEC,eADF,CAEEC,eAFF,KAGO,iCAHP,CAKA,OACEC,uBADF,CAEEC,qBAFF,CAGEC,oBAHF,CAIEC,cAJF,KAKO,mBALP,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAGC,CAAAA,SAAH,MAAGA,SAAH,CAAcC,KAAd,MAAcA,KAAd,oBACnB,oBAAC,qBAAD,mBACE,oBAAC,uBAAD,mBACE,oBAAC,oBAAD,mBACE,0CADF,CADF,cAIE,oBAAC,oBAAD,mBACE,8CADF,CAJF,cAOE,oBAAC,oBAAD,mBACE,2CADF,CAPF,cAUE,oBAAC,oBAAD,mBACE,wCADF,CAVF,cAaE,oBAAC,oBAAD,mBACE,yCADF,CAbF,CADF,CAkBGD,SAAS,CAACE,GAAV,CAAc,SAACC,QAAD,qBACb,oBAAC,YAAD,EAAc,GAAG,CAAEA,QAAQ,CAACC,EAA5B,CAAgC,QAAQ,CAAED,QAA1C,EADa,EAAd,CAlBH,cAqBE,oBAAC,cAAD,iBAAyBF,KAAzB,CArBF,cAsBE,oBAAC,oBAAD,EAAsB,KAAK,CAAEA,KAA7B,EAtBF,CADmB,EAArB,CA2BA,GAAMI,CAAAA,eAAe,CAAGf,wBAAwB,CAAC,CAC/CU,SAAS,CAAEP,eADoC,CAE/CQ,KAAK,CAAEP,eAFwC,CAAD,CAAhD,CAKA,cAAeL,CAAAA,OAAO,CAACgB,eAAD,CAAP,CAAyBN,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\n\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from \"../../redux/cart/cart.selectors\";\n\nimport {\n  CheckoutHeaderContainer,\n  CheckoutPageContainer,\n  HeaderBlockContainer,\n  TotalContainer,\n} from \"./checkout.styles\";\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantity</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map((cartItem) => (\n      <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n    ))}\n    <TotalContainer>TOTAL: ${total}</TotalContainer>\n    <StripeCheckoutButton price={total} />\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal,\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"]},"metadata":{},"sourceType":"module"}