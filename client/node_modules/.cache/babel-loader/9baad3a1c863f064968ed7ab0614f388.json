{"ast":null,"code":"import{createStore,applyMiddleware,compose}from\"redux\";import{persistStore}from\"redux-persist\";import logger from\"redux-logger\";import createSagaMiddleware from\"redux-saga\";import rootReducer from\"./root-reducer\";import rootSaga from\"./root-saga\";var sagaMiddleware=createSagaMiddleware();var middlewares=[sagaMiddleware];if(process.env.NODE_ENV===\"development\"){middlewares.push(logger);}export var store=createStore(rootReducer,compose(applyMiddleware.apply(void 0,middlewares),window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__()));sagaMiddleware.run(rootSaga);export var persistor=persistStore(store);export default store;","map":{"version":3,"sources":["/Users/framos/Projects/e-commerce/client/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","window","__REDUX_DEVTOOLS_EXTENSION__","run","persistor"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,OAASC,YAAT,KAA6B,eAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGH,oBAAoB,EAA3C,CAEA,GAAMI,CAAAA,WAAW,CAAG,CAACD,cAAD,CAApB,CAEA,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1CH,WAAW,CAACI,IAAZ,CAAiBT,MAAjB,EACD,CAED,MAAO,IAAMU,CAAAA,KAAK,CAAGd,WAAW,CAC9BM,WAD8B,CAE9BJ,OAAO,CACLD,eAAe,MAAf,QAAmBQ,WAAnB,CADK,CAELM,MAAM,CAACC,4BAAP,EAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAFuB,CAAzB,CAQPR,cAAc,CAACS,GAAf,CAAmBV,QAAnB,EAEA,MAAO,IAAMW,CAAAA,SAAS,CAAGf,YAAY,CAACW,KAAD,CAA9B,CACP,cAAeA,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middlewares),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}