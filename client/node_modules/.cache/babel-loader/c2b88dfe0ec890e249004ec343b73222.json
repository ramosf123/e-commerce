{"ast":null,"code":"import _defineProperty from\"/Users/framos/Projects/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/framos/Projects/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/framos/Projects/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/framos/Projects/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/framos/Projects/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import FormInput from\"../form-input/form-input.component\";import CustomButton from\"../custom-button/custom-button.component\";import{signUpStart as _signUpStart}from\"../../redux/user/user.actions\";import{SignUpContainer,SignUpTitle}from\"./sign-up.styles\";import{connect}from\"react-redux\";var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:\"\",email:\"\",password:\"\",confirmPassword:\"\"}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setUserCredentials=_useState2[1];var displayName=userCredentials.displayName,email=userCredentials.email,password=userCredentials.password,confirmPassword=userCredentials.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"passwords don't match\");return _context.abrupt(\"return\");case 4:signUpStart({email:email,password:password,displayName:displayName});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setUserCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(SignUpContainer,null,/*#__PURE__*/React.createElement(SignUpTitle,null,\"I do not have an account.\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign up with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Display Name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"SIGN UP\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCreds){return dispatch(_signUpStart(userCreds));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/framos/Projects/e-commerce/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","connect","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","e","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCreds"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\n\nimport { SignUpContainer, SignUpTitle } from \"./sign-up.styles\";\nimport { connect } from \"react-redux\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({ email, password, displayName });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setUserCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignUpContainer>\n      <SignUpTitle>I do not have an account.</SignUpTitle>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"displayName\"\n          value={displayName}\n          onChange={handleChange}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={handleChange}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCreds) => dispatch(signUpStart(userCreds)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}