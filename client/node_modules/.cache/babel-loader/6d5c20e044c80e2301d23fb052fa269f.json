{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, compose(applyMiddleware(...middlewares), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/framos/Projects/e-commerce/client/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","persistStore","logger","createSagaMiddleware","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","window","__REDUX_DEVTOOLS_EXTENSION__","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGd,WAAW,CAC9BM,WAD8B,EAE9BJ,OAAO,CACLD,eAAe,CAAC,GAAGQ,WAAJ,CADV,EAELM,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFlC,CAFuB,CAAzB;AAQPR,cAAc,CAACS,GAAf,CAAmBV,QAAnB;AAEA,OAAO,MAAMW,SAAS,GAAGf,YAAY,CAACW,KAAD,CAA9B;AACP,eAAeA,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from \"./root-reducer\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middlewares),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}